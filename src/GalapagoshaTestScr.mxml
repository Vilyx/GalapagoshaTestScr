<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:ns1="*" addedToStage="windowedapplication1_addedToStageHandler(event)"
					   backgroundColor="0x6dcff6" currentState="beckon"
					   width ="1080" height ="1920" alignmentBaseline="ideographicCenter" showStatusBar="false" backgroundAlpha.ninja="0" frameRate="24">
	<s:states>
		<s:State name="menu"/>
		<s:State name="greeting"/>
		<s:State name="beckon"/>
		
		<s:State name="equador"/>
		<s:State name="recipe"/>
		<s:State name="ninja"/>
		<s:State name="weight"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.events.TimeEvent;
			import org.osmf.layout.ScaleMode;
			// Выход из режима привлечения внимания - startUserInteraction, переходим в режим приветствия
			// Возврат в режим меню - backToMenu
			// Если находимся в режиме меню больше 5 секунд - включается режим завлекания
			private var video:Video = new Video(); 
			private var count:Number = 0;
			private var ns:NetStream;
			
			protected function windowedapplication1_addedToStageHandler(event:Event):void
			{
				stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
				addEventListener(Event.ENTER_FRAME,onEnterFrame);
				
				
				
				var nc:NetConnection = new NetConnection(); 
				nc.connect(null); 
				ns = new NetStream(nc); 
				ns.client = {onMetaData:ns_onMetaData, NetStatusEvent:ns_onPlayStatus}; 
				ns.addEventListener(NetStatusEvent.NET_STATUS, ns_onPlayStatus); 
				beckonVideo.videoObject.attachNetStream(ns);
				ns.play("../assets/1.flv");
			}
			private var lastVid:int = -1;
			protected function ns_onPlayStatus(event:NetStatusEvent):void 
			{ 
				//trace(event.info.code);
				if (event.info.code == "NetStream.Play.Stop") 
				{ 
					var currentVid:int = lastVid;
					while(currentVid == lastVid)
						currentVid = int(1+Math.random()*4.9);
					lastVid = currentVid;
					var path:String = "../assets/"+currentVid.toString()+".flv";
					trace(path);
					ns.play(path);
				}
				
			}
			protected function ns_onMetaData(item:Object):void { 
				
				beckonVideo.width = 1080;// Resize video instance. 
				beckonVideo.verticalCenter = 0;
				beckonVideo.horizontalCenter = 0;
				
				
			} 
			protected function onVideoStateChange(event:MediaPlayerStateChangeEvent):void
			{
				trace(event.state);
				switch(event.state)
				{
					case "ready":
						setTimeout(playNext,1);
						break;
				}
			}
			private function playNext():void
			{
				if(!beckonVideo.playing)
				{
					var path:String = "../assets/"+(int(Math.random()*5)).toString()+".flv";
					trace(path);
					beckonVideo.source = path;
					beckonVideo.play();
				}
			}
			public function startUserInteraction():void
			{
				if(currentState == "beckon")
					currentState = "greeting";
			}
			public function backToMenu():void
			{
				currentState = "menu";
			}
			
			protected function videodisplay1_clickHandler(event:MouseEvent):void
			{
				startUserInteraction();
			}
			
			
			
			protected function equadorBtn_clickHandler(event:MouseEvent):void
			{
				currentState = "equador";
			}
			
			protected function bananaWeightBtn_clickHandler(event:MouseEvent):void
			{
				currentState = "weight";
			}
			
			protected function bananaNinjaBtn_clickHandler(event:MouseEvent):void
			{
				currentState = "ninja";
				frameRate = 60;
			}
			
			protected function bananaRecipeBtn_clickHandler(event:MouseEvent):void
			{
				currentState = "recipe";
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				currentState = "menu";
				frameRate = 24;
			}
			
			protected var firstMenuTime:Date = new Date();
			protected function onEnterFrame(event:Event):void
			{
				if(currentState == "menu")
				{
					var elapsed:Number = new Date().time - firstMenuTime.time;
					trace();
					if(elapsed>5000)currentState = "beckon";
					
				}
				else firstMenuTime = new Date();
			}
			
			protected function videodisplay2_clickHandler(event:MouseEvent):void
			{
				currentState = "menu";
			}
			
			
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Transition id="anim" >
			<mx:AnimateProperty fromValue="1" toValue="100" property="scaleX" target="{circleRecipe}" duration="1000" id="anim2">
				
			</mx:AnimateProperty>
		</s:Transition>
	</fx:Declarations>
	<s:Image includeIn="greeting,beckon" width="2000" height="1300"
			 smooth="true" source="@Embed('../assets/background.png')" 
			 horizontalCenter="0" verticalCenter="0"/>
	<ns1:Clouds2 includeIn="greeting,beckon" width="1100" horizontalCenter="0" verticalCenter="0"/>
	<s:Group includeIn="greeting,beckon,menu" left="0" right="0" top="0" bottom="0">
		
		
		<s:VideoDisplay id="beckonVideo" width="1080" horizontalCenter="0"
						verticalCenter="0"
						click.beckon="videodisplay1_clickHandler(event)"
						source="assets/1.flv"
						click.greeting="videodisplay2_clickHandler(event)"/>
		<s:Image includeIn="beckon" width="300" horizontalCenter="0" smooth="true"
				 source="@Embed('../assets/expandSummer.png')" verticalCenter="600"/>		
		<s:Image width="600" horizontalCenter="0" smooth="true"
				 source="@Embed('../assets/winTrip.png')" verticalCenter="-600"/>
		<ns1:TouchIT includeIn="greeting" horizontalCenter="0" verticalCenter="660"/>
	</s:Group>
	<s:Group includeIn="menu" left="0" right="0" top="0" bottom="0">
		<s:Group  left="0" right="0" top="0" bottom="0" id="bananaRecipe">
			<s:Group left="0" right="0" top="0" bottom="0" mask="{circleRecipe}" click="bananaNinjaBtn_clickHandler(event)">
				<s:Graphic x="0" y="0" width="1082" height="1920">
					<s:Rect x="0" y="0" width="660" height="712">
						<s:fill>
							<s:SolidColor color="0xfbb03b" />
						</s:fill>
					</s:Rect>
				</s:Graphic>
			</s:Group>
			<s:Group id="circleRecipe" width="73" height="73" horizontalCenter="-130" verticalCenter="700">
				<s:Ellipse x="0" width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0"/>
					</s:fill>
				</s:Ellipse>
			</s:Group>
		</s:Group>
		<s:Group  left="0" right="0" top="0" bottom="0" id="bananaWeight">
			<s:Group left="0" right="0" top="0" bottom="0" mask="{circleWeight}" click="bananaWeightBtn_clickHandler(event)">
				<s:Graphic x="0" y="0" width="1082" height="1920">
					<s:Rect x="0" y="0" width="660" height="712">
						<s:fill>
							<s:SolidColor color="0xf15a24" />
						</s:fill>
					</s:Rect>
				</s:Graphic>
			</s:Group>
			<s:Group id="circleWeight" width="73" height="73" horizontalCenter="130" verticalCenter="700">
				<s:Ellipse x="0" width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0"/>
					</s:fill>
				</s:Ellipse>
			</s:Group>
		</s:Group>
		<s:Group  left="0" right="0" top="0" bottom="0" id="equador">
			<s:Group left="0" right="0" top="0" bottom="0" mask="{circleEquador}">
				<s:Graphic x="0" y="0" width="1082" height="1920">
					<s:Rect x="0" y="0" width="660" height="712">
						<s:fill>
							<s:SolidColor color="0x22b573" />
						</s:fill>
					</s:Rect>
				</s:Graphic>
			</s:Group>
			<s:Group id="circleEquador" width="73" height="73" horizontalCenter="0" verticalCenter="600">
				<s:Ellipse x="0" width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0"/>
					</s:fill>
				</s:Ellipse>
			</s:Group>
		</s:Group>
		
		<s:Group  left="0" right="0" top="0" bottom="0" id="bananaNinja">
			<s:Group left="0" right="0" top="0" bottom="0" mask="{circleNinja}">
				<s:Graphic x="0" y="0" width="1082" height="1920">
					<s:Rect x="0" y="0" width="660" height="712">
						<s:fill>
							<s:SolidColor color="0x0081ff" />
						</s:fill>
					</s:Rect>
				</s:Graphic>
			</s:Group>
			<s:Group id="circleNinja" width="73" height="73" horizontalCenter="0" verticalCenter="800">
				<s:Ellipse x="0" width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0"/>
					</s:fill>
				</s:Ellipse>
			</s:Group>
		</s:Group>
	</s:Group>

	<ns1:BananaNinja includeIn="ninja" left="0" top="0" bottom="0" right="0"/>
	<s:Button includeIn="equador,recipe,ninja,weight" x="10" y="10" label="Назад" click="button1_clickHandler(event)"/>

</s:WindowedApplication>
